//nextAuth
import { useSession, signIn, signOut } from "next-auth/react";
import { getServerSession } from "next-auth/next";
import { authOptions } from "./api/auth/[...nextauth]";
import { useRouter } from "next/router";
import Head from 'next/head'
import styles from '@/styles/Profile.module.css'


export default function Profile({ todosArray, notesArray }) {
  const router = useRouter();
  const { data: session } = useSession();

  const todoNotes = todosArray.map((todo) => (
    <div key={todo.id} style={{ backgroundColor: "lavender" }}>
      <div>
        <h2>{todo.category}</h2>
        <p>{todo.id}</p>
        <button onClick={() => router.push(`/${todo.id}`)}>View</button>
      </div>
    </div>
  ));

  const noteDetails = notesArray.map((note) => (
    <div key={note.id} style={{ backgroundColor: "yellow" }}>
      <div>
        <h2>{note.title}</h2>
        <p>{note.content}</p>
        <p>{note.date}</p>
        <p>{note.time}</p>
        {/* <button onClick={() => router.push(`/${note.id}`)}>View</button> */}
      </div>
    </div>
  )
  )



  if (session) {
    return (
      <>
        <Head>
          <title>Make your to-do list</title>
          <meta name="description" content="Generated by Sue" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <button className={styles.signout} onClick={() => signOut()}>Sign out</button>
          <div className={styles.profile}>
            <img
              src={session.user.image}
              style={{ width: "120px", height: "120px", borderRadius: "20%" }}
              />{" "}
            <h2>Hi, {session.user.name} !</h2>
            <p>Check you to-do list or add a new one</p>
          <button onClick={() => router.push("/addTodos")}>
            Add a new to-do list
          </button>
          <button onClick={()=>router.push("/addNotes")}>
            Add a new note
          </button>
        </div>

        <div className={styles.list}>
          <h3>Your Todo Lists</h3>
          <div>
            {noteDetails}
          </div>
          <div>
            {todoNotes}
          </div>
        </div>
        </main>
        
      </>
    );
  }
  return (
    <>
      Not signed in <br />
      <button onClick={() => signIn()}>Sign in</button>
    </>
  );
}

export async function getServerSideProps(context) {
  const todos = await prisma.todo.findMany({
    orderBy: {
      createdAt: "desc",
    },
    include: {
      user: true,
      notes: true,
    },
  });



  const notes = await prisma.note.findMany({
    orderBy: {
      createdAt: "desc",
    },

  });


  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    //redirect to login page
    return {
      redirect: {
        destination: "/api/auth/signin",
        permanent: false,
      },
    };
  }

  const todosLists = JSON.parse(JSON.stringify(todos)) || [];
  const todosArray = Object.values(todosLists);

  const notesLists = JSON.parse(JSON.stringify(notes)) || [];
  const notesArray = Object.values(notesLists);
  return {
    props: {
      session,
      todosArray,
      notesArray
    },
  };
}
